{
    "componentChunkName": "component---src-components-concept-js",
    "path": "/forgefed.peers.community/nscommittedBy.en.html",
    "result": {"pageContext":{"language":"en","languages":["de","en","fr","es"],"node":{"id":"https://forgefed.peers.community/nscommittedBy","type":"Concept","followers":"https://test.skohub.io/followers?subject=forgefed.peers.community%2FnscommittedBy","inbox":"https://test.skohub.io/inbox?target=forgefed.peers.community%2FnscommittedBy","prefLabel":{"de":"committedBy","en":"committedBy","fr":"committedBy","es":"committedBy"},"altLabel":null,"definition":{"de":"Identifies the actor (usually a person, but could be something else, e.g. a bot) that added a set of changes to the version-control Repository. Sometimes the author of the changes and the committer of those changes aren’t the same actor, in which case the committedBy property can be used to specify who added the changes to the repository. For example, when applying a patch to a repository, e.g. a Git repository, the author would be the person who made the patch, and the committer would be the person who applied the patch to their copy of the repository.<br>siehe [4](https://forgefed.peers.community/ns#committedBy)","en":"Identifies the actor (usually a person, but could be something else, e.g. a bot) that added a set of changes to the version-control Repository. Sometimes the author of the changes and the committer of those changes aren’t the same actor, in which case the committedBy property can be used to specify who added the changes to the repository. For example, when applying a patch to a repository, e.g. a Git repository, the author would be the person who made the patch, and the committer would be the person who applied the patch to their copy of the repository.<br>see [4](https://forgefed.peers.community/ns#committedBy)","fr":"Identifies the actor (usually a person, but could be something else, e.g. a bot) that added a set of changes to the version-control Repository. Sometimes the author of the changes and the committer of those changes aren’t the same actor, in which case the committedBy property can be used to specify who added the changes to the repository. For example, when applying a patch to a repository, e.g. a Git repository, the author would be the person who made the patch, and the committer would be the person who applied the patch to their copy of the repository.<br>voir [4](https://forgefed.peers.community/ns#committedBy)","es":"Identifies the actor (usually a person, but could be something else, e.g. a bot) that added a set of changes to the version-control Repository. Sometimes the author of the changes and the committer of those changes aren’t the same actor, in which case the committedBy property can be used to specify who added the changes to the repository. For example, when applying a patch to a repository, e.g. a Git repository, the author would be the person who made the patch, and the committer would be the person who applied the patch to their copy of the repository.<br>ver [4](https://forgefed.peers.community/ns#committedBy)"},"scopeNote":null,"note":null,"notation":["2056"],"example":null,"narrower":[],"narrowerTransitive":[],"broader":{"id":"https://w3id.org/class/redaktor/#forgefed","prefLabel":{"de":"ForgeFed","en":"ForgeFed","fr":"ForgeFed","es":"ForgeFed"}},"broaderTransitive":null,"related":[],"relatedMatch":null,"broadMatch":null,"narrowMatch":null,"closeMatch":null,"exactMatch":null,"inScheme":{"id":"https://w3id.org/class/redaktor/#scheme","title":{"de":"ActivityPub: Funktionen und Verbindungen","en":"ActivityPub: Functions and Relations","fr":"ActivityPub: Functions and Relations","es":"ActivityPub: Functions and Relations"}},"topConceptOf":null},"baseURL":""}},
    "staticQueryHashes": ["3649515864","63159454"]}