{
  "id": "https://w3id.org/class/redaktor/inbox",
  "type": "Concept",
  "followers": "https://test.skohub.io/followers?subject=vocab%2F%2Fw3id.org%2Fclass%2Fredaktor%2Finbox",
  "inbox": "https://test.skohub.io/inbox?target=vocab%2F%2Fw3id.org%2Fclass%2Fredaktor%2Finbox",
  "prefLabel": {
    "de": "inbox",
    "en": "inbox",
    "fr": "inbox",
    "es": "inbox"
  },
  "definition": {
    "de": "The inbox is discovered through the inbox property of an [actor's](https://www.w3.org/TR/activitypub/#actors) profile. The inbox MUST be an [OrderedCollection](https://www.w3.org/TR/activitystreams-vocabulary/#dfn-orderedcollection).<br><br>The inbox stream contains all activities received by the actor. The server SHOULD filter content according to the requester's permission. In general, the owner of an inbox is likely to be able to access all of their inbox contents. Depending on access control, some other content may be public, whereas other content may require authentication for non-owner users, if they can access the inbox at all.<br><br>The server MUST perform de-duplication of activities returned by the inbox. Duplication can occur if an activity is addressed both to an actor's followers, and a specific actor who also follows the recipient actor, and the server has failed to de-duplicate the recipients list. Such deduplication MUST be performed by comparing the id of the activities and dropping any activities already seen.<br>The inboxes of actors on federated servers accepts HTTP POST requests, with behaviour described in [Delivery](https://www.w3.org/TR/activitypub/#delivery). Non-federated servers SHOULD return a 405 Method Not Allowed upon receipt of a POST request.<br>siehe [https://www.w3.org/TR/activitypub/#inbox](https://www.w3.org/TR/activitypub/#inbox)",
    "en": "The inbox is discovered through the inbox property of an [actor's](https://www.w3.org/TR/activitypub/#actors) profile. The inbox MUST be an [OrderedCollection](https://www.w3.org/TR/activitystreams-vocabulary/#dfn-orderedcollection).<br><br>The inbox stream contains all activities received by the actor. The server SHOULD filter content according to the requester's permission. In general, the owner of an inbox is likely to be able to access all of their inbox contents. Depending on access control, some other content may be public, whereas other content may require authentication for non-owner users, if they can access the inbox at all.<br><br>The server MUST perform de-duplication of activities returned by the inbox. Duplication can occur if an activity is addressed both to an actor's followers, and a specific actor who also follows the recipient actor, and the server has failed to de-duplicate the recipients list. Such deduplication MUST be performed by comparing the id of the activities and dropping any activities already seen.<br>The inboxes of actors on federated servers accepts HTTP POST requests, with behaviour described in [Delivery](https://www.w3.org/TR/activitypub/#delivery). Non-federated servers SHOULD return a 405 Method Not Allowed upon receipt of a POST request.<br>see [https://www.w3.org/TR/activitypub/#inbox](https://www.w3.org/TR/activitypub/#inbox)",
    "fr": "The inbox is discovered through the inbox property of an [actor's](https://www.w3.org/TR/activitypub/#actors) profile. The inbox MUST be an [OrderedCollection](https://www.w3.org/TR/activitystreams-vocabulary/#dfn-orderedcollection).<br><br>The inbox stream contains all activities received by the actor. The server SHOULD filter content according to the requester's permission. In general, the owner of an inbox is likely to be able to access all of their inbox contents. Depending on access control, some other content may be public, whereas other content may require authentication for non-owner users, if they can access the inbox at all.<br><br>The server MUST perform de-duplication of activities returned by the inbox. Duplication can occur if an activity is addressed both to an actor's followers, and a specific actor who also follows the recipient actor, and the server has failed to de-duplicate the recipients list. Such deduplication MUST be performed by comparing the id of the activities and dropping any activities already seen.<br>The inboxes of actors on federated servers accepts HTTP POST requests, with behaviour described in [Delivery](https://www.w3.org/TR/activitypub/#delivery). Non-federated servers SHOULD return a 405 Method Not Allowed upon receipt of a POST request.<br>voir [https://www.w3.org/TR/activitypub/#inbox](https://www.w3.org/TR/activitypub/#inbox)",
    "es": "The inbox is discovered through the inbox property of an [actor's](https://www.w3.org/TR/activitypub/#actors) profile. The inbox MUST be an [OrderedCollection](https://www.w3.org/TR/activitystreams-vocabulary/#dfn-orderedcollection).<br><br>The inbox stream contains all activities received by the actor. The server SHOULD filter content according to the requester's permission. In general, the owner of an inbox is likely to be able to access all of their inbox contents. Depending on access control, some other content may be public, whereas other content may require authentication for non-owner users, if they can access the inbox at all.<br><br>The server MUST perform de-duplication of activities returned by the inbox. Duplication can occur if an activity is addressed both to an actor's followers, and a specific actor who also follows the recipient actor, and the server has failed to de-duplicate the recipients list. Such deduplication MUST be performed by comparing the id of the activities and dropping any activities already seen.<br>The inboxes of actors on federated servers accepts HTTP POST requests, with behaviour described in [Delivery](https://www.w3.org/TR/activitypub/#delivery). Non-federated servers SHOULD return a 405 Method Not Allowed upon receipt of a POST request.<br>ver [https://www.w3.org/TR/activitypub/#inbox](https://www.w3.org/TR/activitypub/#inbox)"
  },
  "scopeNote": {
    "de": "ActivityPub Property",
    "en": "ActivityPub Property",
    "fr": "ActivityPub Property",
    "es": "ActivityPub Property"
  },
  "notation": [
    "169"
  ],
  "example": {
    "de": "[Beispiel 9](https://www.w3.org/TR/activitypub/#source-property)\n\n ```json \n{\n  \"@context\": [\"https://www.w3.org/ns/activitystreams\", {\"@language\": \"ja\"}],\n  \"type\": \"Person\",\n  \"id\": \"https://kenzoishii.example.com/\",\n  \"following\": \"https://kenzoishii.example.com/following.json\",\n  \"followers\": \"https://kenzoishii.example.com/followers.json\",\n  \"liked\": \"https://kenzoishii.example.com/liked.json\",\n  \"inbox\": \"https://kenzoishii.example.com/inbox.json\",\n  \"outbox\": \"https://kenzoishii.example.com/feed.json\",\n  \"preferredUsername\": \"kenzoishii\",\n  \"name\": \"石井健蔵\",\n  \"summary\": \"この方はただの例です\",\n  \"icon\": [\n    \"https://kenzoishii.example.com/image/31987aklre4\"\n  ]\n}\n```",
    "en": "[Example 9](https://www.w3.org/TR/activitypub/#source-property)\n\n ```json \n{\n  \"@context\": [\"https://www.w3.org/ns/activitystreams\", {\"@language\": \"ja\"}],\n  \"type\": \"Person\",\n  \"id\": \"https://kenzoishii.example.com/\",\n  \"following\": \"https://kenzoishii.example.com/following.json\",\n  \"followers\": \"https://kenzoishii.example.com/followers.json\",\n  \"liked\": \"https://kenzoishii.example.com/liked.json\",\n  \"inbox\": \"https://kenzoishii.example.com/inbox.json\",\n  \"outbox\": \"https://kenzoishii.example.com/feed.json\",\n  \"preferredUsername\": \"kenzoishii\",\n  \"name\": \"石井健蔵\",\n  \"summary\": \"この方はただの例です\",\n  \"icon\": [\n    \"https://kenzoishii.example.com/image/31987aklre4\"\n  ]\n}\n```",
    "fr": "[Exemple 9](https://www.w3.org/TR/activitypub/#source-property)\n\n ```json \n{\n  \"@context\": [\"https://www.w3.org/ns/activitystreams\", {\"@language\": \"ja\"}],\n  \"type\": \"Person\",\n  \"id\": \"https://kenzoishii.example.com/\",\n  \"following\": \"https://kenzoishii.example.com/following.json\",\n  \"followers\": \"https://kenzoishii.example.com/followers.json\",\n  \"liked\": \"https://kenzoishii.example.com/liked.json\",\n  \"inbox\": \"https://kenzoishii.example.com/inbox.json\",\n  \"outbox\": \"https://kenzoishii.example.com/feed.json\",\n  \"preferredUsername\": \"kenzoishii\",\n  \"name\": \"石井健蔵\",\n  \"summary\": \"この方はただの例です\",\n  \"icon\": [\n    \"https://kenzoishii.example.com/image/31987aklre4\"\n  ]\n}\n```",
    "es": "[Ejemplo 9](https://www.w3.org/TR/activitypub/#source-property)\n\n ```json \n{\n  \"@context\": [\"https://www.w3.org/ns/activitystreams\", {\"@language\": \"ja\"}],\n  \"type\": \"Person\",\n  \"id\": \"https://kenzoishii.example.com/\",\n  \"following\": \"https://kenzoishii.example.com/following.json\",\n  \"followers\": \"https://kenzoishii.example.com/followers.json\",\n  \"liked\": \"https://kenzoishii.example.com/liked.json\",\n  \"inbox\": \"https://kenzoishii.example.com/inbox.json\",\n  \"outbox\": \"https://kenzoishii.example.com/feed.json\",\n  \"preferredUsername\": \"kenzoishii\",\n  \"name\": \"石井健蔵\",\n  \"summary\": \"この方はただの例です\",\n  \"icon\": [\n    \"https://kenzoishii.example.com/image/31987aklre4\"\n  ]\n}\n```"
  },
  "broader": {
    "id": "https://w3id.org/class/redaktor/Actor",
    "prefLabel": {
      "de": "Akteur",
      "en": "Actor",
      "fr": "Acteur",
      "es": "Actor"
    }
  },
  "exactMatch": [
    {
      "id": "http://www.w3.org/ns/activitystreams#inbox"
    }
  ],
  "inScheme": {
    "id": "https://w3id.org/class/redaktor/scheme",
    "title": {
      "de": "ActivityPub und Freunde - Eine Ontolgie des Fediverse",
      "en": "ActivityPub and friends – An ontology of the fediverse",
      "fr": "ActivityPub et ses amis - Une ontologie du fediverse",
      "es": "ActivityPub y sus amigos - Una ontología del fediverso"
    }
  },
  "@context": {
    "@version": 1.1,
    "id": "@id",
    "type": "@type",
    "@vocab": "http://www.w3.org/2004/02/skos/core#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dct": "http://purl.org/dc/terms/",
    "schema": "http://schema.org/",
    "vann": "http://purl.org/vocab/vann/",
    "as": "https://www.w3.org/ns/activitystreams#",
    "ldp": "http://www.w3.org/ns/ldp#",
    "title": {
      "@id": "dct:title",
      "@container": "@language"
    },
    "description": {
      "@id": "dct:description",
      "@container": "@language"
    },
    "issued": {
      "@id": "dct:issued",
      "@type": "xsd:date"
    },
    "created": {
      "@id": "dct:created",
      "@type": "xsd:date"
    },
    "modified": {
      "@id": "dct:modified",
      "@type": "xsd:date"
    },
    "creator": "dct:creator",
    "publisher": "dct:publisher",
    "preferredNamespacePrefix": "vann:preferredNamespacePrefix",
    "preferredNamespaceUri": "vann:preferredNamespaceUri",
    "isBasedOn": "schema:isBasedOn",
    "source": "dct:source",
    "prefLabel": {
      "@container": "@language"
    },
    "altLabel": {
      "@container": [
        "@language",
        "@set"
      ]
    },
    "definition": {
      "@container": "@language"
    },
    "scopeNote": {
      "@container": "@language"
    },
    "note": {
      "@container": "@language"
    },
    "notation": {
      "@container": "@set"
    },
    "example": {
      "@container": "@language"
    },
    "narrower": {
      "@container": "@set"
    },
    "related": {
      "@container": "@set"
    },
    "relatedMatch": {
      "@container": "@set"
    },
    "narrowerTransitive": {
      "@container": "@set"
    },
    "broaderTransitive": {
      "@container": "@set"
    },
    "broadMatch": {
      "@container": "@set"
    },
    "narrowMatch": {
      "@container": "@set"
    },
    "closeMatch": {
      "@container": "@set"
    },
    "exactMatch": {
      "@container": "@set"
    },
    "followers": "as:followers",
    "inbox": "ldp:inbox",
    "hasTopConcept": {
      "@container": "@set"
    }
  }
}